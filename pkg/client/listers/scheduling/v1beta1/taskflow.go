/*
Copyright 2021 The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1beta1 "volcano.sh/apis/pkg/apis/scheduling/v1beta1"
)

// TaskFlowLister helps list TaskFlows.
// All objects returned here must be treated as read-only.
type TaskFlowLister interface {
	// List lists all TaskFlows in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.TaskFlow, err error)
	// TaskFlows returns an object that can list and get TaskFlows.
	TaskFlows(namespace string) TaskFlowNamespaceLister
	TaskFlowListerExpansion
}

// taskFlowLister implements the TaskFlowLister interface.
type taskFlowLister struct {
	indexer cache.Indexer
}

// NewTaskFlowLister returns a new TaskFlowLister.
func NewTaskFlowLister(indexer cache.Indexer) TaskFlowLister {
	return &taskFlowLister{indexer: indexer}
}

// List lists all TaskFlows in the indexer.
func (s *taskFlowLister) List(selector labels.Selector) (ret []*v1beta1.TaskFlow, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.TaskFlow))
	})
	return ret, err
}

// TaskFlows returns an object that can list and get TaskFlows.
func (s *taskFlowLister) TaskFlows(namespace string) TaskFlowNamespaceLister {
	return taskFlowNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TaskFlowNamespaceLister helps list and get TaskFlows.
// All objects returned here must be treated as read-only.
type TaskFlowNamespaceLister interface {
	// List lists all TaskFlows in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.TaskFlow, err error)
	// Get retrieves the TaskFlow from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.TaskFlow, error)
	TaskFlowNamespaceListerExpansion
}

// taskFlowNamespaceLister implements the TaskFlowNamespaceLister
// interface.
type taskFlowNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TaskFlows in the indexer for a given namespace.
func (s taskFlowNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.TaskFlow, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.TaskFlow))
	})
	return ret, err
}

// Get retrieves the TaskFlow from the indexer for a given namespace and name.
func (s taskFlowNamespaceLister) Get(name string) (*v1beta1.TaskFlow, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("taskflow"), name)
	}
	return obj.(*v1beta1.TaskFlow), nil
}
